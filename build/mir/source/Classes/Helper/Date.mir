[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 1; ]
import Toybox.Lang;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 2; ]
using Toybox.WatchUi as :Ui;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 3; ]
using Toybox.Time.Gregorian as :Date;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 5; ]
module Helper {
    [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 5; ]
    <init> {
    }
    [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 7; ]
    class Date{
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 7; ]
        <init> {
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 7; ]
        static
        <init> {
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 9 19 ]
            %tmp.1 = newd Dictionary<Number, String> 0;
            putv self :ShortWeekdays %tmp.1;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 10 19 ]
            %tmp.2 = newd Dictionary<Number, String> 0;
            putv self :ShortMonths %tmp.2;
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 7; ]
        function initialize() as Void {
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 9; @position = 19; ]
        static
        var ShortWeekdays;
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 10; @position = 19; ]
        static
        var ShortMonths;
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 13; ]
        static
        function loadResource() {
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 19; ]
        static
        function ShortWeekyday(greg_dayofweek as Number) as String {
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_20_8_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 21 12 ]
            [ "C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_20_8_start" "C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_20_8_stop" ]
            %dayofweek.1 = local;
            %tmp.1 = 1;
            %tmp.3 = lgetv %greg_dayofweek;
            %tmp.4 = 5;
            %tmp.5 = add %tmp.3 %tmp.4;
            %tmp.6 = 7;
            %tmp.7 = mod %tmp.5 %tmp.6;
            %tmp.8 = add %tmp.1 %tmp.7;
            lputv %dayofweek.1 %tmp.8;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 23 12 ]
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_23_12_if_stmt:
            %tmp.9 = lgetv %self;
            %tmp.10 = getv %tmp.9 :ShortWeekdays;
            %tmp.11 = getv function %tmp.10 :hasKey;
            %tmp.13 = lgetv %dayofweek.1;
            %tmp.14 = invoke %tmp.10 %tmp.11(%tmp.13);
            %tmp.15 = false;
            %tmp.16 = eq %tmp.14 %tmp.15;
            bf %tmp.16 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_23_12_if_end;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_23_12_if_true:
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_24_12_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 25 16 ]
            %tmp.17 = getv self :ShortWeekdays;
            %tmp.18 = lgetv %self;
            %tmp.19 = getv function %tmp.18 :LoadShortWeekday;
            %tmp.21 = lgetv %dayofweek.1;
            %tmp.22 = invoke %tmp.18 %tmp.19(%tmp.21);
            %tmp.24 = lgetv %dayofweek.1;
            aputv %tmp.17 %tmp.24 %tmp.22;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_24_12_stop:
            goto @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_23_12_if_end;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_23_12_if_end:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 27 12 ]
            %tmp.25 = lgetv %self;
            %tmp.26 = getv %tmp.25 :ShortWeekdays;
            %tmp.28 = lgetv %dayofweek.1;
            %tmp.29 = agetv %tmp.26 %tmp.28;
            ret %tmp.29;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_20_8_stop:
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 31; ]
        static
        function ShortMonth(month as Number) as String {
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_32_8_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 33 12 ]
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_33_12_if_stmt:
            %tmp.1 = lgetv %self;
            %tmp.2 = getv %tmp.1 :ShortMonths;
            %tmp.3 = getv function %tmp.2 :hasKey;
            %tmp.5 = lgetv %month;
            %tmp.6 = invoke %tmp.2 %tmp.3(%tmp.5);
            %tmp.7 = false;
            %tmp.8 = eq %tmp.6 %tmp.7;
            bf %tmp.8 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_33_12_if_end;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_33_12_if_true:
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_34_12_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 35 16 ]
            %tmp.9 = getv self :ShortMonths;
            %tmp.10 = lgetv %self;
            %tmp.11 = getv function %tmp.10 :LoadShortMonth;
            %tmp.13 = lgetv %month;
            %tmp.14 = invoke %tmp.10 %tmp.11(%tmp.13);
            %tmp.16 = lgetv %month;
            aputv %tmp.9 %tmp.16 %tmp.14;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_34_12_stop:
            goto @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_33_12_if_end;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_33_12_if_end:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 37 12 ]
            %tmp.17 = lgetv %self;
            %tmp.18 = getv %tmp.17 :ShortMonths;
            %tmp.20 = lgetv %month;
            %tmp.21 = agetv %tmp.18 %tmp.20;
            ret %tmp.21;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_32_8_stop:
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 41; ]
        private static
        function LoadShortWeekday(day as Number) as String {
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_42_8_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 43 12 ]
            %tmp.2 = lgetv %day;
            push %tmp.2;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_43_12_switchCaseBegin:
            %tmp.3 = dup %tmp.2;
            %tmp.4 = 1;
            %tmp.5 = getv function %tmp.3 :equals;
            %tmp.6 = invoke %tmp.3 %tmp.5 (%tmp.4);
            bt %tmp.6 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_45_16;
            %tmp.7 = dup %tmp.2;
            %tmp.8 = 2;
            %tmp.9 = getv function %tmp.7 :equals;
            %tmp.10 = invoke %tmp.7 %tmp.9 (%tmp.8);
            bt %tmp.10 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_46_16;
            %tmp.11 = dup %tmp.2;
            %tmp.12 = 3;
            %tmp.13 = getv function %tmp.11 :equals;
            %tmp.14 = invoke %tmp.11 %tmp.13 (%tmp.12);
            bt %tmp.14 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_47_16;
            %tmp.15 = dup %tmp.2;
            %tmp.16 = 4;
            %tmp.17 = getv function %tmp.15 :equals;
            %tmp.18 = invoke %tmp.15 %tmp.17 (%tmp.16);
            bt %tmp.18 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_48_16;
            %tmp.19 = dup %tmp.2;
            %tmp.20 = 5;
            %tmp.21 = getv function %tmp.19 :equals;
            %tmp.22 = invoke %tmp.19 %tmp.21 (%tmp.20);
            bt %tmp.22 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_49_16;
            %tmp.23 = dup %tmp.2;
            %tmp.24 = 6;
            %tmp.25 = getv function %tmp.23 :equals;
            %tmp.26 = invoke %tmp.23 %tmp.25 (%tmp.24);
            bt %tmp.26 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_50_16;
            %tmp.27 = dup %tmp.2;
            %tmp.28 = 7;
            %tmp.29 = getv function %tmp.27 :equals;
            %tmp.30 = invoke %tmp.27 %tmp.29 (%tmp.28);
            bt %tmp.30 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_51_16;
            goto @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_43_12_defaultCodeBegin;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_45_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 45 24 ]
            %tmp.31 = getm $.Toybox.WatchUi;
            %tmp.32 = getv function %tmp.31 :loadResource;
            %tmp.34 = getv ? :Rez;
            %tmp.35 = getv %tmp.34 :Strings;
            %tmp.36 = getv %tmp.35 :ShortMonday;
            %tmp.37 = invoke %tmp.31 %tmp.32(%tmp.36);
            ret %tmp.37;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_46_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 46 24 ]
            %tmp.38 = getm $.Toybox.WatchUi;
            %tmp.39 = getv function %tmp.38 :loadResource;
            %tmp.41 = getv ? :Rez;
            %tmp.42 = getv %tmp.41 :Strings;
            %tmp.43 = getv %tmp.42 :ShortTuesday;
            %tmp.44 = invoke %tmp.38 %tmp.39(%tmp.43);
            ret %tmp.44;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_47_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 47 24 ]
            %tmp.45 = getm $.Toybox.WatchUi;
            %tmp.46 = getv function %tmp.45 :loadResource;
            %tmp.48 = getv ? :Rez;
            %tmp.49 = getv %tmp.48 :Strings;
            %tmp.50 = getv %tmp.49 :ShortWednesday;
            %tmp.51 = invoke %tmp.45 %tmp.46(%tmp.50);
            ret %tmp.51;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_48_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 48 24 ]
            %tmp.52 = getm $.Toybox.WatchUi;
            %tmp.53 = getv function %tmp.52 :loadResource;
            %tmp.55 = getv ? :Rez;
            %tmp.56 = getv %tmp.55 :Strings;
            %tmp.57 = getv %tmp.56 :ShortThursday;
            %tmp.58 = invoke %tmp.52 %tmp.53(%tmp.57);
            ret %tmp.58;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_49_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 49 24 ]
            %tmp.59 = getm $.Toybox.WatchUi;
            %tmp.60 = getv function %tmp.59 :loadResource;
            %tmp.62 = getv ? :Rez;
            %tmp.63 = getv %tmp.62 :Strings;
            %tmp.64 = getv %tmp.63 :ShortFriday;
            %tmp.65 = invoke %tmp.59 %tmp.60(%tmp.64);
            ret %tmp.65;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_50_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 50 24 ]
            %tmp.66 = getm $.Toybox.WatchUi;
            %tmp.67 = getv function %tmp.66 :loadResource;
            %tmp.69 = getv ? :Rez;
            %tmp.70 = getv %tmp.69 :Strings;
            %tmp.71 = getv %tmp.70 :ShortSaturday;
            %tmp.72 = invoke %tmp.66 %tmp.67(%tmp.71);
            ret %tmp.72;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_51_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 51 24 ]
            %tmp.73 = getm $.Toybox.WatchUi;
            %tmp.74 = getv function %tmp.73 :loadResource;
            %tmp.76 = getv ? :Rez;
            %tmp.77 = getv %tmp.76 :Strings;
            %tmp.78 = getv %tmp.77 :ShortSunday;
            %tmp.79 = invoke %tmp.73 %tmp.74(%tmp.78);
            ret %tmp.79;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_43_12_defaultCodeBegin:
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_43_12_switchCaseEnd:
            pop;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 53 12 ]
            %tmp.80 = "";
            ret %tmp.80;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_42_8_stop:
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 57; ]
        private static
        function LoadShortMonth(month as Number) as String {
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_58_8_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 59 12 ]
            %tmp.2 = lgetv %month;
            push %tmp.2;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_59_12_switchCaseBegin:
            %tmp.3 = dup %tmp.2;
            %tmp.4 = 1;
            %tmp.5 = getv function %tmp.3 :equals;
            %tmp.6 = invoke %tmp.3 %tmp.5 (%tmp.4);
            bt %tmp.6 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_61_16;
            %tmp.7 = dup %tmp.2;
            %tmp.8 = 2;
            %tmp.9 = getv function %tmp.7 :equals;
            %tmp.10 = invoke %tmp.7 %tmp.9 (%tmp.8);
            bt %tmp.10 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_62_16;
            %tmp.11 = dup %tmp.2;
            %tmp.12 = 3;
            %tmp.13 = getv function %tmp.11 :equals;
            %tmp.14 = invoke %tmp.11 %tmp.13 (%tmp.12);
            bt %tmp.14 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_63_16;
            %tmp.15 = dup %tmp.2;
            %tmp.16 = 4;
            %tmp.17 = getv function %tmp.15 :equals;
            %tmp.18 = invoke %tmp.15 %tmp.17 (%tmp.16);
            bt %tmp.18 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_64_16;
            %tmp.19 = dup %tmp.2;
            %tmp.20 = 5;
            %tmp.21 = getv function %tmp.19 :equals;
            %tmp.22 = invoke %tmp.19 %tmp.21 (%tmp.20);
            bt %tmp.22 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_65_16;
            %tmp.23 = dup %tmp.2;
            %tmp.24 = 6;
            %tmp.25 = getv function %tmp.23 :equals;
            %tmp.26 = invoke %tmp.23 %tmp.25 (%tmp.24);
            bt %tmp.26 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_66_16;
            %tmp.27 = dup %tmp.2;
            %tmp.28 = 7;
            %tmp.29 = getv function %tmp.27 :equals;
            %tmp.30 = invoke %tmp.27 %tmp.29 (%tmp.28);
            bt %tmp.30 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_67_16;
            %tmp.31 = dup %tmp.2;
            %tmp.32 = 8;
            %tmp.33 = getv function %tmp.31 :equals;
            %tmp.34 = invoke %tmp.31 %tmp.33 (%tmp.32);
            bt %tmp.34 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_68_16;
            %tmp.35 = dup %tmp.2;
            %tmp.36 = 9;
            %tmp.37 = getv function %tmp.35 :equals;
            %tmp.38 = invoke %tmp.35 %tmp.37 (%tmp.36);
            bt %tmp.38 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_69_16;
            %tmp.39 = dup %tmp.2;
            %tmp.40 = 10;
            %tmp.41 = getv function %tmp.39 :equals;
            %tmp.42 = invoke %tmp.39 %tmp.41 (%tmp.40);
            bt %tmp.42 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_70_16;
            %tmp.43 = dup %tmp.2;
            %tmp.44 = 11;
            %tmp.45 = getv function %tmp.43 :equals;
            %tmp.46 = invoke %tmp.43 %tmp.45 (%tmp.44);
            bt %tmp.46 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_71_16;
            %tmp.47 = dup %tmp.2;
            %tmp.48 = 12;
            %tmp.49 = getv function %tmp.47 :equals;
            %tmp.50 = invoke %tmp.47 %tmp.49 (%tmp.48);
            bt %tmp.50 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_72_16;
            goto @C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_59_12_defaultCodeBegin;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_61_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 61 24 ]
            %tmp.51 = getm $.Toybox.WatchUi;
            %tmp.52 = getv function %tmp.51 :loadResource;
            %tmp.54 = getv ? :Rez;
            %tmp.55 = getv %tmp.54 :Strings;
            %tmp.56 = getv %tmp.55 :ShortJanuar;
            %tmp.57 = invoke %tmp.51 %tmp.52(%tmp.56);
            ret %tmp.57;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_62_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 62 24 ]
            %tmp.58 = getm $.Toybox.WatchUi;
            %tmp.59 = getv function %tmp.58 :loadResource;
            %tmp.61 = getv ? :Rez;
            %tmp.62 = getv %tmp.61 :Strings;
            %tmp.63 = getv %tmp.62 :ShortFebruary;
            %tmp.64 = invoke %tmp.58 %tmp.59(%tmp.63);
            ret %tmp.64;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_63_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 63 24 ]
            %tmp.65 = getm $.Toybox.WatchUi;
            %tmp.66 = getv function %tmp.65 :loadResource;
            %tmp.68 = getv ? :Rez;
            %tmp.69 = getv %tmp.68 :Strings;
            %tmp.70 = getv %tmp.69 :ShortMarch;
            %tmp.71 = invoke %tmp.65 %tmp.66(%tmp.70);
            ret %tmp.71;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_64_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 64 24 ]
            %tmp.72 = getm $.Toybox.WatchUi;
            %tmp.73 = getv function %tmp.72 :loadResource;
            %tmp.75 = getv ? :Rez;
            %tmp.76 = getv %tmp.75 :Strings;
            %tmp.77 = getv %tmp.76 :ShortApril;
            %tmp.78 = invoke %tmp.72 %tmp.73(%tmp.77);
            ret %tmp.78;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_65_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 65 24 ]
            %tmp.79 = getm $.Toybox.WatchUi;
            %tmp.80 = getv function %tmp.79 :loadResource;
            %tmp.82 = getv ? :Rez;
            %tmp.83 = getv %tmp.82 :Strings;
            %tmp.84 = getv %tmp.83 :ShortMay;
            %tmp.85 = invoke %tmp.79 %tmp.80(%tmp.84);
            ret %tmp.85;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_66_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 66 24 ]
            %tmp.86 = getm $.Toybox.WatchUi;
            %tmp.87 = getv function %tmp.86 :loadResource;
            %tmp.89 = getv ? :Rez;
            %tmp.90 = getv %tmp.89 :Strings;
            %tmp.91 = getv %tmp.90 :ShortJune;
            %tmp.92 = invoke %tmp.86 %tmp.87(%tmp.91);
            ret %tmp.92;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_67_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 67 24 ]
            %tmp.93 = getm $.Toybox.WatchUi;
            %tmp.94 = getv function %tmp.93 :loadResource;
            %tmp.96 = getv ? :Rez;
            %tmp.97 = getv %tmp.96 :Strings;
            %tmp.98 = getv %tmp.97 :ShortJuly;
            %tmp.99 = invoke %tmp.93 %tmp.94(%tmp.98);
            ret %tmp.99;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_68_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 68 24 ]
            %tmp.100 = getm $.Toybox.WatchUi;
            %tmp.101 = getv function %tmp.100 :loadResource;
            %tmp.103 = getv ? :Rez;
            %tmp.104 = getv %tmp.103 :Strings;
            %tmp.105 = getv %tmp.104 :ShortAugust;
            %tmp.106 = invoke %tmp.100 %tmp.101(%tmp.105);
            ret %tmp.106;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_69_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 69 24 ]
            %tmp.107 = getm $.Toybox.WatchUi;
            %tmp.108 = getv function %tmp.107 :loadResource;
            %tmp.110 = getv ? :Rez;
            %tmp.111 = getv %tmp.110 :Strings;
            %tmp.112 = getv %tmp.111 :ShortSeptember;
            %tmp.113 = invoke %tmp.107 %tmp.108(%tmp.112);
            ret %tmp.113;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_70_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 70 25 ]
            %tmp.114 = getm $.Toybox.WatchUi;
            %tmp.115 = getv function %tmp.114 :loadResource;
            %tmp.117 = getv ? :Rez;
            %tmp.118 = getv %tmp.117 :Strings;
            %tmp.119 = getv %tmp.118 :ShortOctober;
            %tmp.120 = invoke %tmp.114 %tmp.115(%tmp.119);
            ret %tmp.120;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_71_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 71 25 ]
            %tmp.121 = getm $.Toybox.WatchUi;
            %tmp.122 = getv function %tmp.121 :loadResource;
            %tmp.124 = getv ? :Rez;
            %tmp.125 = getv %tmp.124 :Strings;
            %tmp.126 = getv %tmp.125 :ShortNovember;
            %tmp.127 = invoke %tmp.121 %tmp.122(%tmp.126);
            ret %tmp.127;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_72_16:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 72 25 ]
            %tmp.128 = getm $.Toybox.WatchUi;
            %tmp.129 = getv function %tmp.128 :loadResource;
            %tmp.131 = getv ? :Rez;
            %tmp.132 = getv %tmp.131 :Strings;
            %tmp.133 = getv %tmp.132 :ShortDecember;
            %tmp.134 = invoke %tmp.128 %tmp.129(%tmp.133);
            ret %tmp.134;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_59_12_defaultCodeBegin:
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_59_12_switchCaseEnd:
            pop;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc" 75 12 ]
            %tmp.135 = lgetv %month;
            %tmp.136 = getv function %tmp.135 :toString;
            %tmp.137 = invoke %tmp.135 %tmp.136();
            ret %tmp.137;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Helper_Date_mc_58_8_stop:
        }
    }
}
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Helper\Date.mc"; @line = 1; ]
<init> {
}
