[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 1; ]
import Toybox.Application;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 2; ]
using Toybox.Graphics as :Gfx;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 3; ]
import Toybox.Lang;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 4; ]
import Toybox.System;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 5; ]
import Toybox.WatchUi;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 6; ]
import Helper;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 7; ]
using Toybox.Time.Gregorian as :D;
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 9; ]
module Widgets {
    [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 9; ]
    <init> {
    }
    [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 11; ]
    class Date extends WidgetBase{
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 11; ]
        <init> {
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 14 20 ]
            %tmp.1 = null;
            %tmp.2 = as %tmp.1 FontResource;
            putv self :_Font %tmp.2;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 15 20 ]
            %tmp.3 = null;
            %tmp.4 = as %tmp.3 Themes.ThemeSettingsBase;
            putv self :_Theme %tmp.4;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 16 20 ]
            %tmp.6 = 3;
            %tmp.5 = newa %tmp.6;
            %tmp.7 = as %tmp.5 Array<ExtTextPart>;
            putv self :_Texts %tmp.7;
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 11; ]
        static
        <init> {
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 13; @position = 20; ]
        private
        var _textContainer as ExtText;
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 14; @position = 20; ]
        private
        var _Font;
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 15; @position = 20; ]
        private
        var _Theme;
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 16; @position = 20; ]
        private
        var _Texts;
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 18; ]
        function initialize() as Void {
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_19_8_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 20 12 ]
            %tmp.2 = getv ? :WidgetBase;
            %tmp.3 = getv function %tmp.2 :initialize;
            invoke %tmp.2 %tmp.3();
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 21 12 ]
            %tmp.4 = getm $.Toybox.WatchUi;
            %tmp.5 = getv function %tmp.4 :loadResource;
            %tmp.7 = getv ? :Rez;
            %tmp.8 = getv %tmp.7 :Fonts;
            %tmp.9 = getv %tmp.8 :DateFont;
            %tmp.10 = invoke %tmp.4 %tmp.5(%tmp.9);
            %tmp.11 = as %tmp.10 FontResource;
            putv self :_Font %tmp.11;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 22 12 ]
            %tmp.12 = getm $;
            %tmp.13 = getv function %tmp.12 :getTheme;
            %tmp.14 = invoke %tmp.12 %tmp.13();
            putv self :_Theme %tmp.14;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_19_8_stop:
        }
        [ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 25; ]
        function draw(dc as Gfx.Dc) {
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_26_8_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 27 12 ]
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_27_12_if_stmt:
            %tmp.1 = lgetv %self;
            %tmp.2 = getv %tmp.1 :_initialized;
            %tmp.3 = false;
            %tmp.4 = eq %tmp.2 %tmp.3;
            bf %tmp.4 @C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_27_12_if_end;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_27_12_if_true:
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_28_12_start:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 29 16 ]
            %tmp.8 = getv ? :ExtText;
            %tmp.9 = lgetv %self;
            %tmp.10 = getv %tmp.9 :locX;
            %tmp.11 = lgetv %self;
            %tmp.12 = getv %tmp.11 :locY;
            %tmp.14 = getv ? :ExtText;
            %tmp.15 = getv %tmp.14 :HJUST_CENTER;
            %tmp.17 = getv ? :ExtText;
            %tmp.18 = getv %tmp.17 :VJUST_CENTER;
            %tmp.5 = newc %tmp.8 (%tmp.10, %tmp.12, %tmp.15, %tmp.18);
            putv self :_textContainer %tmp.5;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 30 16 ]
            %tmp.19 = getv self :_Texts;
            %tmp.23 = getv ? :ExtTextPart;
            %tmp.24 = "";
            %tmp.25 = lgetv %self;
            %tmp.26 = getv %tmp.25 :_Theme;
            %tmp.27 = getv %tmp.26 :DateWeekdayColor;
            %tmp.28 = lgetv %self;
            %tmp.29 = getv %tmp.28 :_Font;
            %tmp.20 = newc %tmp.23 (%tmp.24, %tmp.27, %tmp.29);
            %tmp.30 = 0;
            aputv %tmp.19 %tmp.30 %tmp.20;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 31 16 ]
            %tmp.31 = getv self :_Texts;
            %tmp.35 = getv ? :ExtTextPart;
            %tmp.36 = "";
            %tmp.37 = lgetv %self;
            %tmp.38 = getv %tmp.37 :_Theme;
            %tmp.39 = getv %tmp.38 :DateDayColor;
            %tmp.40 = lgetv %self;
            %tmp.41 = getv %tmp.40 :_Font;
            %tmp.32 = newc %tmp.35 (%tmp.36, %tmp.39, %tmp.41);
            %tmp.42 = 1;
            aputv %tmp.31 %tmp.42 %tmp.32;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 32 16 ]
            %tmp.43 = getv self :_Texts;
            %tmp.47 = getv ? :ExtTextPart;
            %tmp.48 = "";
            %tmp.49 = lgetv %self;
            %tmp.50 = getv %tmp.49 :_Theme;
            %tmp.51 = getv %tmp.50 :DateYearColor;
            %tmp.52 = lgetv %self;
            %tmp.53 = getv %tmp.52 :_Font;
            %tmp.44 = newc %tmp.47 (%tmp.48, %tmp.51, %tmp.53);
            %tmp.54 = 2;
            aputv %tmp.43 %tmp.54 %tmp.44;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 33 16 ]
            %tmp.55 = true;
            putv self :_initialized %tmp.55;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_28_12_stop:
            goto @C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_27_12_if_end;
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_27_12_if_end:
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 36 12 ]
            [ "C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_26_8_start" "C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_26_8_stop" ]
            %now.1 = local;
            %tmp.57 = getv ? :Time;
            %tmp.58 = getv function %tmp.57 :now;
            %tmp.59 = invoke %tmp.57 %tmp.58();
            lputv %now.1 %tmp.59;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 37 12 ]
            [ "C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_26_8_start" "C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_26_8_stop" ]
            %time.2 = local;
            %tmp.60 = getm $.Toybox.Time.Gregorian;
            %tmp.61 = getv function %tmp.60 :info;
            %tmp.63 = lgetv %now.1;
            %tmp.65 = getv ? :Time;
            %tmp.66 = getv %tmp.65 :FORMAT_SHORT;
            %tmp.67 = invoke %tmp.60 %tmp.61(%tmp.63, %tmp.66);
            lputv %time.2 %tmp.67;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 39 12 ]
            %tmp.68 = getv self :_Texts;
            %tmp.69 = 0;
            %tmp.70 = agetv %tmp.68 %tmp.69;
            %tmp.71 = getm $.Helper;
            %tmp.72 = getv %tmp.71 :Date;
            %tmp.73 = getv function %tmp.72 :ShortWeekyday;
            %tmp.74 = lgetv %time.2;
            %tmp.75 = getv %tmp.74 :day_of_week;
            %tmp.76 = invoke %tmp.72 %tmp.73(%tmp.75);
            %tmp.77 = " ";
            %tmp.78 = add %tmp.76 %tmp.77;
            putv %tmp.70 :Text %tmp.78;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 40 12 ]
            %tmp.79 = getv self :_Texts;
            %tmp.80 = 1;
            %tmp.81 = agetv %tmp.79 %tmp.80;
            %tmp.82 = lgetv %time.2;
            %tmp.83 = getv %tmp.82 :day;
            %tmp.84 = getv function %tmp.83 :toString;
            %tmp.85 = invoke %tmp.83 %tmp.84();
            %tmp.86 = ".";
            %tmp.87 = add %tmp.85 %tmp.86;
            %tmp.88 = getm $.Helper;
            %tmp.89 = getv %tmp.88 :Date;
            %tmp.90 = getv function %tmp.89 :ShortMonth;
            %tmp.91 = lgetv %time.2;
            %tmp.92 = getv %tmp.91 :month;
            %tmp.93 = invoke %tmp.89 %tmp.90(%tmp.92);
            %tmp.94 = add %tmp.87 %tmp.93;
            %tmp.95 = " ";
            %tmp.96 = add %tmp.94 %tmp.95;
            putv %tmp.81 :Text %tmp.96;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 41 12 ]
            %tmp.97 = getv self :_Texts;
            %tmp.98 = 2;
            %tmp.99 = agetv %tmp.97 %tmp.98;
            %tmp.100 = lgetv %time.2;
            %tmp.101 = getv %tmp.100 :year;
            %tmp.102 = getv function %tmp.101 :toString;
            %tmp.103 = invoke %tmp.101 %tmp.102();
            putv %tmp.99 :Text %tmp.103;
[ "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc" 43 12 ]
            %tmp.104 = lgetv %self;
            %tmp.105 = getv %tmp.104 :_textContainer;
            %tmp.106 = getv function %tmp.105 :draw;
            %tmp.107 = lgetv %self;
            %tmp.108 = getv %tmp.107 :_Texts;
            %tmp.110 = lgetv %dc;
            invoke %tmp.105 %tmp.106(%tmp.108, %tmp.110);
C_Programmierung_Github_YAWF_YAWF_source_Classes_Widgets_Date_mc_26_8_stop:
        }
    }
}
[ @file = "C:\Programmierung\Github\YAWF\YAWF\source\Classes\Widgets\Date.mc"; @line = 1; ]
<init> {
}
